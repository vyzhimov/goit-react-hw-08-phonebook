{"version":3,"file":"static/js/436.5a1befdc.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactFilter/ContactFilter.jsx","components/Error/Error.styled.jsx","components/Error/Error.jsx","components/ContactList/ContactsList.jsx","components/PhoneBook/PhoneBook.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectContactsList = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectContactsFilter = state => state.filter;\n\nexport const selectFilteredContacts = state => {\n  const contactItems = selectContactsList(state);\n  const contactFilter = selectContactsFilter(state);\n\n  const filteredContacts = contactItems.filter(\n    ({ name, number }) =>\n      name.toLowerCase().includes(contactFilter.toLowerCase()) ||\n      number.includes(contactFilter)\n  );\n\n  return filteredContacts;\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContactsList } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nimport { toast } from 'react-hot-toast';\n\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n\n  const handleOnSubmit = event => {\n    event.preventDefault();\n\n    const data = new FormData(event.currentTarget);\n\n    const isExist = contacts.find(\n      contact => contact.name.toLowerCase() === data.get('name').toLowerCase()\n    );\n\n    if (isExist) {\n      toast.error(`${data.get('name')} is already in contacts`);\n      return;\n    }\n\n    dispatch(\n      addContact({\n        name: data.get('name'),\n        number: data.get('number'),\n      })\n    );\n\n    setName('');\n    setNumber('');\n  };\n\n  const handleChangeName = event => setName(event.target.value);\n\n  const handleChangeNumber = event => setNumber(event.target.value);\n\n  return (\n    <>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <Box\n          component=\"form\"\n          noValidate\n          sx={{ mt: 3 }}\n          style={{ width: '100%' }}\n          onSubmit={handleOnSubmit}\n        >\n          <Grid\n            container\n            spacing={3}\n            style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}\n          >\n            <Grid item xs={8} sm={5}>\n              <TextField\n                autoComplete=\"given-name\"\n                name=\"name\"\n                required\n                fullWidth\n                id=\"name\"\n                label=\"Name\"\n                autoFocus\n                onChange={handleChangeName}\n                value={name}\n              />\n            </Grid>\n            <Grid item xs={8} sm={5}>\n              <TextField\n                required\n                fullWidth\n                id=\"number\"\n                label=\"Number\"\n                name=\"number\"\n                autoComplete=\"number\"\n                onChange={handleChangeNumber}\n                value={number}\n              />\n            </Grid>\n            <Grid item xs={12} sm={2}>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n                style={{ height: '53px', marginTop: '0', marginBottom: '0' }}\n              >\n                Add contact\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default ContactForm;\n","import { setFilter } from 'redux/contacts/filterSlice';\nimport { selectContactsFilter } from 'redux/contacts/selectors';\nimport { TextField } from '@mui/material';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst ContactFilter = () => {\n  const filteredValue = useSelector(selectContactsFilter);\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <TextField\n      autoComplete=\"given-name\"\n      name=\"filter\"\n      required\n      fullWidth\n      id=\"filter\"\n      label=\"Search contact by name or number\"\n      autoFocus\n      value={filteredValue}\n      onChange={handleChangeFilter}\n      style={{ marginTop: '30px' }}\n    />\n  );\n};\n\nexport default ContactFilter;\n","import styled from '@emotion/styled';\n\nexport const ErrorWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 30px;\n  margin-top: 100px;\n  color: #fff;\n  font-size: 20px;\n`;\n\nexport const ErrorImg = styled.img`\n  display: block;\n  width: 100px;\n`;\n","import PropTypes from 'prop-types';\nimport { ErrorWrapper, ErrorImg } from './Error.styled';\nimport Warning from '../../images/Warning.png';\n\nconst Error = ({ message }) => {\n  return (\n    <ErrorWrapper>\n      <ErrorImg src={Warning} alt=\"warning\" />\n      <div>\n        <p>Sorry there was an error. Please, reload the page! </p>\n      </div>\n    </ErrorWrapper>\n  );\n};\n\nexport default Error;\n\nError.propTypes = {\n  message: PropTypes.string,\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport {\n  selectIsLoading,\n  selectError,\n  selectFilteredContacts,\n} from 'redux/contacts/selectors';\nimport { fetchContacts, deleteContact } from 'redux/contacts/operations';\nimport { BsPersonCircle } from 'react-icons/bs';\nimport { GiRotaryPhone } from 'react-icons/gi';\n\nimport IsLoading from 'components/IsLoading/IsLoading';\nimport Error from 'components/Error/Error';\nimport { Button, List } from '@mui/material';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\n\nexport default function ContactsList() {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <>\n      {isLoading && <IsLoading />}\n      {error && <Error />}\n\n      {!isLoading && !error && (\n        <List\n          sx={{\n            width: '100%',\n            bgcolor: 'background.paper',\n            position: 'relative',\n            overflow: 'auto',\n            maxHeight: 500,\n            '& ul': { padding: 0 },\n          }}\n          subheader={<li />}\n        >\n          <ul>\n            {filteredContacts.map(({ id, name, number }) => (\n              <ListItem\n                key={id}\n                style={{\n                  display: 'flex',\n                  justifyContent: 'flex-end',\n                  alignItems: 'flex-start',\n                  marginTop: '30px',\n                }}\n              >\n                <ListItemText\n                  primary={<BsPersonCircle />}\n                  secondary={`${name}`}\n                  style={{\n                    display: 'flex',\n                    gap: '15px',\n                    justifyContent: 'flex-start',\n                    alignItems: 'baseline',\n                    width: '150px',\n                  }}\n                />\n                <ListItemText\n                  primary={<GiRotaryPhone />}\n                  secondary={`${number}`}\n                  style={{\n                    display: 'flex',\n                    gap: '15px',\n                    justifyContent: 'flex-start',\n                    alignItems: 'baseline',\n                    width: '500px',\n                  }}\n                />\n                <Button onClick={() => handleDeleteContact(id)}>Delete</Button>\n              </ListItem>\n            ))}\n          </ul>\n        </List>\n      )}\n    </>\n  );\n}\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactFilter from 'components/ContactFilter/ContactFilter';\nimport ContactsList from 'components/ContactList/ContactsList';\n\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\n\nconst PhoneBook = () => {\n  return (\n    <Container component=\"main\" maxWidth=\"lg\">\n      <Typography\n        component=\"h1\"\n        variant=\"h3\"\n        style={{\n          textAlign: 'center',\n          marginTop: '30px',\n          textTransform: 'uppercase',\n        }}\n      >\n        Phone Book\n      </Typography>\n      <ContactForm />\n      <ContactFilter />\n      <ContactsList />\n    </Container>\n  );\n};\n\nexport default PhoneBook;\n","import { useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport PhoneBook from 'components/PhoneBook/PhoneBook';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nconst Contacts = () => {\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <>\n      <Helmet>\n        <title>Phonebook</title>\n      </Helmet>\n      <div>{isLoading && 'Request in progress...'}</div>\n      <PhoneBook />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContactsList","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectContactsFilter","filter","selectFilteredContacts","contactItems","contactFilter","name","number","toLowerCase","includes","useState","setName","setNumber","dispatch","useDispatch","useSelector","Box","sx","display","flexDirection","justifyContent","alignItems","component","noValidate","mt","style","width","onSubmit","event","preventDefault","data","FormData","currentTarget","find","contact","get","toast","addContact","Grid","container","spacing","item","xs","sm","TextField","autoComplete","required","fullWidth","id","label","autoFocus","onChange","target","value","Button","type","variant","mb","height","marginTop","marginBottom","filteredValue","e","setFilter","ErrorWrapper","styled","ErrorImg","message","src","Warning","alt","ContactsList","filteredContacts","useEffect","fetchContacts","IsLoading","List","bgcolor","position","overflow","maxHeight","padding","subheader","map","ListItem","ListItemText","primary","secondary","gap","onClick","deleteContact","handleDeleteContact","Container","maxWidth","Typography","textAlign","textTransform","Helmet"],"sourceRoot":""}